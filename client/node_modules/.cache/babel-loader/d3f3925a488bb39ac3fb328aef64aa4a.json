{"ast":null,"code":"var _jsxFileName = \"/home/victor/Documents/my_irc/client/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link, useParams, useRouteMatch } from \"react-router-dom\";\nimport './App.css';\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport ReactDOM from \"react-dom\";\nimport { Redirect } from 'react-router-dom';\nimport Cookies from 'universal-cookie';\nimport { Welcome } from './welcome';\nimport socketIOClient from \"socket.io-client\";\n\nconst {\n  useEffect\n} = require(\"react\");\n\nconst {\n  useState\n} = require(\"react\");\n\nconst username = prompt(\"Quel est votre pseudo ?\");\nmoment.locale('fr');\nconst socket = socketIOClient(\"http://localhost:4242\", {\n  transports: [\"websocket\", \"polling\"]\n});\n\nconst App = ({}) => {\n  const [users, setUsers] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    socket.on(\"connect\", () => {\n      socket.emit(\"username\", username);\n    });\n    socket.on(\"users\", users => {\n      setUsers(users);\n    });\n    socket.on(\"message\", message => {\n      setMessages(messages => [...messages, message]);\n    });\n    socket.on(\"connected\", user => {\n      setUsers(users => [...users, user]);\n    });\n  }, []);\n\n  const submit = event => {\n    event.preventDefault();\n    socket.emit(\"send\", message);\n    setMessage(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Bonjour \", username), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, \"Messages\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, messages.map(({\n    user,\n    date,\n    text\n  }, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 33\n    }\n  }, moment(date).format(\"hh:mm:ss a\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 33\n    }\n  }, user.name, \": \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 33\n    }\n  }, text)))), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submit,\n    id: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    onChange: e => setMessage(e.currentTarget.value),\n    value: message,\n    id: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"submit\",\n    type: \"submit\",\n    className: \"btn btn-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, \"Envoyer le message\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, \"Users\"), /*#__PURE__*/React.createElement(\"ul\", {\n    id: \"users\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, users.map(({\n    name,\n    id\n  }) => /*#__PURE__*/React.createElement(\"li\", {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }, name, \" - \", /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 51\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/messageTo/:name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 59\n    }\n  }, \"Message priv\\xE9\"))))))));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 17\n  }\n}), document.getElementById(\"root\"));\n/*\nclass Home extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            isSignedUp: false,\n            name: '',\n            timestamp: '',\n        }\n\n        Welcome((err, timestamp) => this.setState({\n            timestamp\n        }));\n    }\n\n    cookies = new Cookies();\n\n    mySubmitHandler = (event) => {\n        event.preventDefault()\n        this.cookies.set('username', this.state.name)\n    }\n\n    myChangeHandler = (event) => {\n        let nam = event.target.name;\n        let val = event.target.value;\n        this.setState({[nam]: val});\n    }\n\n    render() {\n        return (\n            <div>\n                <p className=\"App-intro\">\n                    This is the timer value: {this.state.timestamp}\n                </p>\n                <h2>Home</h2>\n\n                <p>Mon pseudo: {this.cookies.get('username')}</p>\n\n                <form onSubmit={this.mySubmitHandler} method='POST' action='/login'>\n                    <input name=\"name\" type=\"text\" placeholder=\"Name\" onChange={this.myChangeHandler} value={this.state.name} />\n                    <input name=\"submit\" type=\"submit\" value=\"Valider mon pseudo\" onChange={this.myChangeHandler} />\n                </form>\n            </div>\n        )\n    }\n}*/\n\nexport default App;","map":{"version":3,"sources":["/home/victor/Documents/my_irc/client/src/App.js"],"names":["React","Component","BrowserRouter","Router","Switch","Route","Link","useParams","useRouteMatch","axios","moment","ReactDOM","Redirect","Cookies","Welcome","socketIOClient","useEffect","require","useState","username","prompt","locale","socket","transports","App","users","setUsers","message","setMessage","messages","setMessages","on","emit","user","submit","event","preventDefault","map","date","text","index","format","name","e","currentTarget","value","id","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    useParams,\n    useRouteMatch\n} from \"react-router-dom\";\nimport './App.css';\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport ReactDOM from \"react-dom\";\nimport { Redirect } from 'react-router-dom'\nimport Cookies from 'universal-cookie';\nimport {Welcome} from './welcome'\nimport socketIOClient from \"socket.io-client\";\nconst {useEffect} = require(\"react\");\nconst {useState} = require(\"react\");\n\nconst username = prompt(\"Quel est votre pseudo ?\");\nmoment.locale('fr')\n\nconst socket = socketIOClient(\"http://localhost:4242\", {\n    transports: [\"websocket\", \"polling\"]\n});\n\nconst App = ({}) => {\n    const [users, setUsers] = useState([]);\n    const [message, setMessage] = useState(\"\");\n    const [messages, setMessages] = useState([]);\n\n    useEffect(() => {\n        socket.on(\"connect\", () => {\n            socket.emit(\"username\", username);\n        });\n\n        socket.on(\"users\", users => {\n            setUsers(users);\n        });\n\n        socket.on(\"message\", message => {\n            setMessages(messages => [...messages, message]);\n        });\n\n        socket.on(\"connected\", user => {\n            setUsers(users => [...users, user]);\n        });\n    }, []);\n\n    const submit = event => {\n        event.preventDefault();\n        socket.emit(\"send\", message);\n        setMessage(\"\");\n    };\n\n    return (\n        <div>\n            <h6>Bonjour {username}</h6>\n            <div className=\"row\">\n                <div className=\"col-md-8\">\n                    <h6>Messages</h6>\n                    <div id=\"messages\">\n                        {messages.map(({ user, date, text }, index) => (\n                            <div key={index} className=\"row mb-2\">\n                                <div className=\"col-md-3\">\n                                    {moment(date).format(\"hh:mm:ss a\")}\n                                </div>\n                                <div className=\"col-md-2\">{user.name}: </div>\n                                <div className=\"col-md-2\">{text}</div>\n                            </div>\n                        ))}\n                    </div>\n                    <form onSubmit={submit} id=\"form\">\n                        <div className=\"input-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                onChange={e => setMessage(e.currentTarget.value)}\n                                value={message}\n                                id=\"text\"\n                            />\n                            <span className=\"btn\">\n                <button id=\"submit\" type=\"submit\" className=\"btn btn-success\">\n                  Envoyer le message\n                </button>\n              </span>\n                        </div>\n                    </form>\n                </div>\n                <div className=\"col-md-4\">\n                    <h6>Users</h6>\n                    <ul id=\"users\">\n                        {users.map(({ name, id }) => (\n                            <li key={id}>{name} - <Router><Link to=\"/messageTo/:name\" >Message privé</Link></Router></li>\n                        ))}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n/*\nclass Home extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            isSignedUp: false,\n            name: '',\n            timestamp: '',\n        }\n\n        Welcome((err, timestamp) => this.setState({\n            timestamp\n        }));\n    }\n\n    cookies = new Cookies();\n\n    mySubmitHandler = (event) => {\n        event.preventDefault()\n        this.cookies.set('username', this.state.name)\n    }\n\n    myChangeHandler = (event) => {\n        let nam = event.target.name;\n        let val = event.target.value;\n        this.setState({[nam]: val});\n    }\n\n    render() {\n        return (\n            <div>\n                <p className=\"App-intro\">\n                    This is the timer value: {this.state.timestamp}\n                </p>\n                <h2>Home</h2>\n\n                <p>Mon pseudo: {this.cookies.get('username')}</p>\n\n                <form onSubmit={this.mySubmitHandler} method='POST' action='/login'>\n                    <input name=\"name\" type=\"text\" placeholder=\"Name\" onChange={this.myChangeHandler} value={this.state.name} />\n                    <input name=\"submit\" type=\"submit\" value=\"Valider mon pseudo\" onChange={this.myChangeHandler} />\n                </form>\n            </div>\n        )\n    }\n}*/\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}