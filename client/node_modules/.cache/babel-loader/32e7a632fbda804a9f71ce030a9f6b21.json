{"ast":null,"code":"var _jsxFileName = \"/Users/victorgousset/Desktop/dev/my_irc/client/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link, useParams, useRouteMatch } from \"react-router-dom\";\nimport './App.css';\nimport moment from \"moment\";\nimport ReactDOM from \"react-dom\";\nimport socketIOClient from \"socket.io-client\";\n\nconst {\n  useEffect\n} = require(\"react\");\n\nconst {\n  useState\n} = require(\"react\");\n\nconst username = prompt(\"Quel est votre pseudo ?\");\nmoment.locale('fr');\nconst socket = socketIOClient(\"http://localhost:4242\", {\n  transports: [\"websocket\", \"polling\"]\n});\n\nconst Home = ({}) => {\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(App, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/create_channel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Create, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }))));\n};\n\nfunction Create() {\n  return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Oe oe oe\");\n}\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [ChannelName, setChannelName] = useState(\"\");\n  const [messages, setMessages] = useState([]); //verif role\n\n  useEffect(() => {\n    socket.on(\"connect\", () => {\n      socket.emit(\"username\", username);\n    });\n    socket.on(\"users\", users => {\n      setUsers(users);\n    });\n    socket.on(\"message\", message => {\n      setMessages(messages => [...messages, message]);\n    });\n    socket.on(\"connected\", user => {\n      setUsers(users => [...users, user]);\n    });\n  }, []);\n\n  const submit = event => {\n    event.preventDefault();\n\n    if (message.substr(0, 5) === \"/nick\") {\n      let newUsername = message.substr(6, 10);\n      socket.emit(\"newUsername\", newUsername);\n    } else if (message.substr(0, 6) === \"/users\") {\n      let list = document.getElementById('users').textContent;\n      /*for (let i; i < il; i++) {\n          console.log(users[i])\n      }*/\n\n      socket.emit(\"send\", list);\n    } else {\n      socket.emit(\"send\", message);\n      setMessage(\"\");\n    }\n  };\n\n  const submitcreatechannel = event => {\n    event.preventDefault();\n    socket.emit('CreateChannel', ChannelName);\n    setChannelName(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitcreatechannel,\n    id: \"form_create_channel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"channel_name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"submit\",\n    type: \"submit\",\n    className: \"btn btn-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, \"Cr\\xE9er\"))), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \"Bonjour \", username), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, \"Messages\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, messages.map(({\n    user,\n    date,\n    text\n  }, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 33\n    }\n  }, moment(date).format(\"hh:mm:ss a\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 33\n    }\n  }, user.name, \": \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 33\n    }\n  }, text)))), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submit,\n    id: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    onChange: e => setMessage(e.currentTarget.value),\n    value: message,\n    id: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"submit\",\n    type: \"submit\",\n    className: \"btn btn-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, \"Envoyer le message\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }, \"Users\"), /*#__PURE__*/React.createElement(\"ul\", {\n    id: \"users\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }, users.map(({\n    name,\n    id\n  }) => /*#__PURE__*/React.createElement(\"li\", {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 29\n    }\n  }, name, \"-\", /*#__PURE__*/React.createElement(\"a\", {\n    href: '/messagePrivate?to=' + name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 49\n    }\n  }, \"MP\")))))));\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 17\n  }\n}), document.getElementById(\"root\"));\n/*\nclass Home extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            isSignedUp: false,\n            name: '',\n            timestamp: '',\n        }\n\n        Welcome((err, timestamp) => this.setState({\n            timestamp\n        }));\n    }\n\n    cookies = new Cookies();\n\n    mySubmitHandler = (event) => {\n        event.preventDefault()\n        this.cookies.set('username', this.state.name)\n    }\n\n    myChangeHandler = (event) => {\n        let nam = event.target.name;\n        let val = event.target.value;\n        this.setState({[nam]: val});\n    }\n\n    render() {\n        return (\n            <div>\n                <p className=\"App-intro\">\n                    This is the timer value: {this.state.timestamp}\n                </p>\n                <h2>Home</h2>\n\n                <p>Mon pseudo: {this.cookies.get('username')}</p>\n\n                <form onSubmit={this.mySubmitHandler} method='POST' action='/login'>\n                    <input name=\"name\" type=\"text\" placeholder=\"Name\" onChange={this.myChangeHandler} value={this.state.name} />\n                    <input name=\"submit\" type=\"submit\" value=\"Valider mon pseudo\" onChange={this.myChangeHandler} />\n                </form>\n            </div>\n        )\n    }\n}*/\n\nexport default Home;","map":{"version":3,"sources":["/Users/victorgousset/Desktop/dev/my_irc/client/src/App.js"],"names":["React","Component","BrowserRouter","Router","Switch","Route","Link","useParams","useRouteMatch","moment","ReactDOM","socketIOClient","useEffect","require","useState","username","prompt","locale","socket","transports","Home","Create","App","users","setUsers","message","setMessage","ChannelName","setChannelName","messages","setMessages","on","emit","user","submit","event","preventDefault","substr","newUsername","list","document","getElementById","textContent","submitcreatechannel","map","date","text","index","format","name","e","currentTarget","value","id","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    useParams,\n    useRouteMatch\n} from \"react-router-dom\";\nimport './App.css';\nimport moment from \"moment\";\nimport ReactDOM from \"react-dom\";\nimport socketIOClient from \"socket.io-client\";\nconst {useEffect} = require(\"react\");\nconst {useState} = require(\"react\");\n\nconst username = prompt(\"Quel est votre pseudo ?\");\nmoment.locale('fr')\nconst socket = socketIOClient(\"http://localhost:4242\", {\n    transports: [\"websocket\", \"polling\"]\n});\n\nconst Home = ({}) => {\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/\">\n                    <App />\n                </Route>\n                <Route path=\"/create_channel\">\n                    <Create />\n                </Route>\n            </Switch>\n        </Router>\n    )\n}\n\nfunction Create() {\n    return(\n        <h1>Oe oe oe</h1>\n    )\n}\n\nfunction App() {\n    const [users, setUsers] = useState([]);\n    const [message, setMessage] = useState(\"\");\n    const [ChannelName, setChannelName] = useState(\"\");\n    const [messages, setMessages] = useState([]);\n//verif role\n    useEffect(() => {\n        socket.on(\"connect\", () => {\n            socket.emit(\"username\", username);\n        });\n\n        socket.on(\"users\", users => {\n            setUsers(users);\n        });\n\n        socket.on(\"message\", message => {\n            setMessages(messages => [...messages, message]);\n        });\n\n        socket.on(\"connected\", user => {\n            setUsers(users => [...users, user]);\n        });\n    }, []);\n\n    const submit = event => {\n        event.preventDefault();\n\n        if (message.substr(0,5) === \"/nick\") {\n            let newUsername = message.substr(6, 10);\n            socket.emit(\"newUsername\", newUsername)\n        } else if(message.substr(0, 6) === \"/users\") {\n            let list = document.getElementById('users').textContent\n            /*for (let i; i < il; i++) {\n                console.log(users[i])\n            }*/\n            socket.emit(\"send\", list)\n        } else {\n            socket.emit(\"send\", message);\n            setMessage(\"\");\n        }\n    };\n\n    const submitcreatechannel = event => {\n        event.preventDefault();\n        socket.emit('CreateChannel', ChannelName)\n        setChannelName(\"\");\n    };\n\n    return (\n        <div>\n            <form onSubmit={submitcreatechannel} id=\"form_create_channel\">\n                <div className=\"input-group\">\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"channel_name\"\n                    />\n                    <button id=\"submit\" type=\"submit\" className=\"btn btn-success\">Créer</button>\n                </div>\n            </form>\n\n            <h1>Bonjour {username}</h1>\n            <div className=\"row\">\n                <div className=\"col-md-8\">\n                    <h6>Messages</h6>\n                    <div id=\"messages\">\n                        {messages.map(({ user, date, text }, index) => (\n                            <div key={index} className=\"row mb-2\">\n                                <div className=\"col-md-3\">\n                                    {moment(date).format(\"hh:mm:ss a\")}\n                                </div>\n                                <div className=\"col-md-2\">{user.name}: </div>\n                                <div className=\"col-md-2\">{text}</div>\n                            </div>\n                        ))}\n                    </div>\n                    <form onSubmit={submit} id=\"form\">\n                        <div className=\"input-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                onChange={e => setMessage(e.currentTarget.value)}\n                                value={message}\n                                id=\"text\"\n                            />\n                            <span className=\"btn\">\n                <button id=\"submit\" type=\"submit\" className=\"btn btn-success\">\n                  Envoyer le message\n                </button>\n              </span>\n                        </div>\n                    </form>\n                </div>\n                <div className=\"col-md-4\">\n                    <h6>Users</h6>\n                    <ul id=\"users\">\n                        {users.map(({ name, id }) => (\n                            <li key={id}>{name}-<a href={'/messagePrivate?to=' + name}>MP</a></li>\n                        ))}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n/*\nclass Home extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            isSignedUp: false,\n            name: '',\n            timestamp: '',\n        }\n\n        Welcome((err, timestamp) => this.setState({\n            timestamp\n        }));\n    }\n\n    cookies = new Cookies();\n\n    mySubmitHandler = (event) => {\n        event.preventDefault()\n        this.cookies.set('username', this.state.name)\n    }\n\n    myChangeHandler = (event) => {\n        let nam = event.target.name;\n        let val = event.target.value;\n        this.setState({[nam]: val});\n    }\n\n    render() {\n        return (\n            <div>\n                <p className=\"App-intro\">\n                    This is the timer value: {this.state.timestamp}\n                </p>\n                <h2>Home</h2>\n\n                <p>Mon pseudo: {this.cookies.get('username')}</p>\n\n                <form onSubmit={this.mySubmitHandler} method='POST' action='/login'>\n                    <input name=\"name\" type=\"text\" placeholder=\"Name\" onChange={this.myChangeHandler} value={this.state.name} />\n                    <input name=\"submit\" type=\"submit\" value=\"Valider mon pseudo\" onChange={this.myChangeHandler} />\n                </form>\n            </div>\n        )\n    }\n}*/\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}